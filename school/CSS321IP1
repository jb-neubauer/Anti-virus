
Select an existing organization, or identify a hypothetical organization that fits the requirements listed above. Submit your proposal to your instructor before proceeding further with the assignments in the course. Approval should be sought within the first several days of the course. Your instructor will tell you how to submit this proposal and what notification will be given for project approval.

Assignment:

For the assignments in this course, you will not be implementing any software assurance policies or procedures. You will be developing a comprehensive software assurance guidelines document. Your first task in this process will be to select an organization (or identify a hypothetical organization) to use as the basis of your projects. You will also create the shell document for the final project deliverable that you will be working on during each unit. As you proceed through each project phase, you will add content to each section of the final document to gradually complete the final project deliverable. Appropriate research should be conducted to support the development of your guideline document, and assumptions may be made when necessary.

	The company I chose is the one I am currently working for.  I work for a distribution company with two locations.  One in Watervliet, NY the other in Reno NV.  The name of the company is SKS.  They are a bottle distribution company that has more than 100 employees and is expanding.  The reason why I chose this company is that all too often I find myself blaming our internal code and software for the issues that we have.  
	Many times we see issues like webpages not working properly, scanning and shipping errors, and many other errors.  They all have one thing in common many times.  That is the software we use.  
	The software we are using is based off of PHP with SQL as the database infrastructure.  The software was created in house by 3 developers, two of which no longer work for the company and the third mostly deals with the CSS of the website.  So that person, though can navigate through the website and can troubleshoot many issues, isn't the best when it comes to software issue resolution.  To make things worse, she is self taught and when issues arise, can't seem to wrap her head around it possibly being code related.  

	The worst part is that the developer I mentioned, the self taught person, isn't the only one with this kind of view.  That is the culture at SKS.  Where the code can't be the issue and that there are other more underlining issues outside of the code that are having an adverse effect on what is going on with the software that we use.  This culture is allowed becase of a phrase "That is the way things have always been."  That culture has started to change out of necessity though, the current developers and IT staff are starting to push back that notion and are making a push to change the culture.
	Along with that the pervious developers did not use some of the best practices when developing code.  They relied on spaghetti code where everything is so intertwined that if someone edits code in one place, it often breaks code in another place and can ultimately lead to long downtimes for internal and external customers.  When building the software used, they were more concrened with getting a product that we could work with rather than one that works well.  There are many nested loops, a lot of functions and information is hardcoded, and objects were not used when programming.  The worst part about the code is that none of it was tested when being created which leads to a lot of 'hot fixes' rather than implementing new software.
	That is why I chose the company I did.  It seems like they need a lof of help.


